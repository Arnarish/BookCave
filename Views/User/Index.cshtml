@model BookCave.Models.ViewModels.UserViewModel
@using Microsoft.AspNetCore.Identity
@using System.Security.Claims

@inject SignInManager<ApplicationUser> SignInManager

@{
    var claim = ((ClaimsIdentity) User.Identity).Claims.FirstOrDefault(c => c.Type == "UserName")?.Value;
}

<h2>Profile info for @Model.FullName</h2>
<div>
    <div>
        <img src="@Model.Image" alt="@Model.FullName" height="80" width="80">
        <p>Full name: @Model.FullName</p>
        <p>Email @Model.Email</p>
        <p>Address: @Model.Address</p>
        <p>ZIP: @Model.Postal</p>
        <p>Country: @Model.Country</p>
        <p>
            Favorite book:
           @if(Model.FavoriteBook == null)
           {
                <span>none selected</span>
           }
           else
           {
                <a asp-controller="Book" asp-action="Details" asp-route-id="@Model.FavoriteBookId">@Model.FavoriteBook</a>
           } 
            </p>  
        @if(claim == Model.Email)
        {
            <a asp-controller="User" asp-action="OrderHistory"><button type="button">View all orders</button></a>
            <a asp-controller="User" asp-action="EditProfile">Manage profile</a>
        }
    </div>
    
</div>
@if (this.User.IsInRole("Admin"))
{
    <div>
        <a asp-controller="Book" asp-action="Create"><button>Add a book</button></a>
        <a  asp-controller="User" asp-action="Register"><button>Register a user</button></a>
    </div>
}

<h1>Books on waiting list</h1>
<hr>
<h2>Reviews (Model.Reviews)</h2>




