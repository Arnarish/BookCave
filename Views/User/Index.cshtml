@model BookCave.Models.ViewModels.UserViewModel
@using Microsoft.AspNetCore.Identity
@using System.Security.Claims

@inject SignInManager<ApplicationUser> SignInManager

@{
    var claim = ((ClaimsIdentity) User.Identity).Claims.FirstOrDefault(c => c.Type == "UserName")?.Value;
}

<h2>Profile info for @Model.FullName</h2>
<br>
<div>
    <div>

        <img id="profile-photo" src="@Model.Image" alt="@Model.FullName" height="80" width="80">
        <div id="profile">
        <p>Full name: @Model.FullName</p>
        <p>Email @Model.Email</p>
        <p>Address: @Model.Address</p>
        <p>ZIP: @Model.Postal</p>
        <p>Country: @Model.Country</p>
        <p>
            Favorite book:
           @if(Model.FavoriteBook == null)
           {
                <span>none selected</span>
           }
           else
           {
                <a asp-controller="Book" asp-action="Details" asp-route-id="@Model.FavoriteBookId">@Model.FavoriteBook</a>
           } 
            </p>
        </div>  
        <div id="profile-buttons">
        @if(claim == Model.Email)
        {
            <a class ="btn btn-primary" asp-controller="User" asp-action="OrderHistory">View all orders</a>
            <a class ="btn btn-primary" asp-controller="User" asp-action="EditProfile">Manage profile</a>
        }
    </div>
    </div>
    
</div>
@if (this.User.IsInRole("Admin"))
{
    <div>
        <a class ="btn btn-primary" asp-controller="Book" asp-action="Create">Add a book</a>
        <a class ="btn btn-primary" asp-controller="User" asp-action="Register">Register a user</a>
    </div>
}

<h1>Books on waiting list</h1>
<hr>
<fieldset class="form-group">
    <legend>Reviews: (@Model.Reviews.Count())</legend>

    <div>
        <ul id="list-of-reviews">
            @foreach(var review in Model.Reviews)
            {
                <li class="review-block">
                @review.Rating,
                @review.Comment
                </li>
            }
        </ul>
    </div>
</fieldset>




